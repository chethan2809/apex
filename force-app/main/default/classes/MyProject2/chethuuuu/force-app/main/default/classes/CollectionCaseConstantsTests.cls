@isTest
private class CollectionCaseConstantsTests {
    @isTest
    private static void collectionCaseConstantsTest() {

        Test.startTest();
            Object x = CollectionCaseConstants.CASE_NUMBER;
            x = CollectionCaseConstants.FOLLOW_UP_DATE;
            x = CollectionCaseConstants.SUPERVISOR;
            x = CollectionCaseConstants.LEGAL_USER;
            x = CollectionCaseConstants.BANKRUPTCY_CHAPTER;
            x = CollectionCaseConstants.PARTIES_ASSOCIATED;
            x = CollectionCaseConstants.ACCOUNT;
            x = CollectionCaseConstants.CONTACT;
            x = CollectionCaseConstants.BANKRUPTCY_PROOF_OF_CLAIM_FILED_DATE;
            x = CollectionCaseConstants.BANKRUPTCY_STATUS;
            x = CollectionCaseConstants.FRAUD_ALLEGED_TYPE;
            x = CollectionCaseConstants.DEMAND_LETTER_ATTACHED;
            x = CollectionCaseConstants.INSPECTION_DATE;
            x = CollectionCaseConstants.BUSINESS_STATUS;
            x = CollectionCaseConstants.OWNERSHIP_CHANGE;
            x = CollectionCaseConstants.DEMAND_LETTER_DELIVERED;
            x = CollectionCaseConstants.CONTACT_MADE_WITH_PG;
            x = CollectionCaseConstants.LEGAL_COUNSEL_TYPE;
            x = CollectionCaseConstants.SUIT_FILED_DATE;
            x = CollectionCaseConstants.COURT_LOCATION;
            x = CollectionCaseConstants.RECEIVERSHIP_DISSOLUTION;
            x = CollectionCaseConstants.JUDGMENT_AMOUNT;
            x = CollectionCaseConstants.JUDGMENT_DATE;
            x = CollectionCaseConstants.JUDGMENT_MATURITY_DATE;
            x = CollectionCaseConstants.JUDGEMENT_RATE_OF_INTEREST;
            x = CollectionCaseConstants.BANKRUPTCY_FILED;
            x = CollectionCaseConstants.BAD_CONTACT_INFO;
            x = CollectionCaseConstants.LEFT_VOICEMAIL;
            x = CollectionCaseConstants.GATEKEEPER;
            x = CollectionCaseConstants.CONTACTED;
            x = CollectionCaseConstants.REFUSAL_TO_PAY;
            x = CollectionCaseConstants.CEASE_AND_DESIST;
            x = CollectionCaseConstants.DECEASED;
            x = CollectionCaseConstants.DECEASED_OWNER;
            x = CollectionCaseConstants.DECEASED_OWNER_CONFIRMED;
            x = CollectionCaseConstants.BANKRUPTCY_IN_PROCESS;
            x = CollectionCaseConstants.VERIFY_BANKRUPTCY_DETAILS;
            x = CollectionCaseConstants.BANKRUPTCY_PROOF_OF_CLAIM_FILED;
            x = CollectionCaseConstants.BANKRUPTCY_STATUS_UPDATE;
            x = CollectionCaseConstants.BANKRUPTCY_PLAN_PAYMENTS;
            x = CollectionCaseConstants.BANKRUPTCY_PLAN;
            x = CollectionCaseConstants.FRAUD;
            x = CollectionCaseConstants.FRAUD_ALLEGED;
            x = CollectionCaseConstants.FRAUD_CONFIRMED;
            x = CollectionCaseConstants.SITE_INSPECTION;
            x = CollectionCaseConstants.SITE_INSPECTION_ORDERED;
            x = CollectionCaseConstants.REQUEST_DEMAND_LETTER;
            x = CollectionCaseConstants.BANKRUPTCY;
            x = CollectionCaseConstants.CONTACT_ATTEMPT;
            x = CollectionCaseConstants.SETTLEMENT_NEGOTIATION;
            x = CollectionCaseConstants.SETTLEMENT_NEGOTIATIONS;
            x = CollectionCaseConstants.SETTLEMENT_PLAN;
            x = CollectionCaseConstants.SETTLEMENT_PLAN_REQUESTED;
            x = CollectionCaseConstants.ACCOMMODATION_REQUESTED;
            x = CollectionCaseConstants.ACCOMMODATION;
            x = CollectionCaseConstants.SUPERVISOR_REVIEW;
            x = CollectionCaseConstants.LEGAL;
            x = CollectionCaseConstants.LEGAL_REVIEW;
            x = CollectionCaseConstants.MOVE_TO_LEGAL_COUNSEL;
            x = CollectionCaseConstants.MOVE_TO_INSIDE_COUNSEL;
            x = CollectionCaseConstants.MOVE_TO_OUTSIDE_COUNSEL;
            x = CollectionCaseConstants.INSIDE_COUNSEL;
            x = CollectionCaseConstants.OUTSIDE_COUNSEL;
            x = CollectionCaseConstants.PREPARING_SUIT;
            x = CollectionCaseConstants.SUIT_FILED;
            x = CollectionCaseConstants.JUDGEMENT;
            x = CollectionCaseConstants.JUDGEMENT_AWARDED;
            x = CollectionCaseConstants.DEBT_CONSOLIDATOR_FOUND;
            x = CollectionCaseConstants.PAYMENT_ARRANGEMENT_PROMISE_TO_PAY_TYPE;
            x = CollectionCaseConstants.PAYMENT_ARRANGEMENT_JUDGEMENT_TYPE;
            x = CollectionCaseConstants.PAYMENT_ARRANGEMENT_CATCH_UP_TYPE;
            x = CollectionCaseConstants.PAYMENT_ARRANGEMENT_SETTLEMENT_TYPE;
            x = CollectionCaseConstants.PAYMENT_ARRANGEMENT_ACCOMMODATION_TYPE;
            x = CollectionCaseConstants.COLLECTION_CASE_SUB_STATUS_CATUP_MISSED;
            x = CollectionCaseConstants.COLLECTION_CASE_SUB_STATUS_SETTLEMENT_MISSED;
            x = CollectionCaseConstants.COLLECTION_CASE_STATUS_BAD_STANDING;
            x = CollectionCaseConstants.COLLECTION_CASE_STATUS_SETTLEMENT_PLAN;
            x = CollectionCaseConstants.COLLECTION_CASE_STATUS_WORKING;
            x = CollectionCaseConstants.COLLECTION_CASE_STATUS_ACCOMMODATION;
            x = CollectionCaseConstants.FREQUENCY_DAILY;
            x = CollectionCaseConstants.FREQUENCY_WEEKLY;
            x = CollectionCaseConstants.FREQUENCY_BI_WEEKLY;
            x = CollectionCaseConstants.FREQUENCY_MONTHLY;
            x = CollectionCaseConstants.RETURN_REASON_CODE_01;
            x = CollectionCaseConstants.RETURN_REASON_CODE_09;
            x = CollectionCaseConstants.RETURN_REASON_CODE_BLANK;
            x = CollectionCaseConstants.TOTAL_OUTSTANDING_REPAYMENT_AMOUNT;
            x = CollectionCaseConstants.TOTAL_OUTSTANDING_REPAYMENT_AMOUNT_0;
            x = CollectionCaseConstants.NUMBER_OF_MISSED_PAYMENTS_3;
            x = CollectionCaseConstants.NUMBER_OF_MISSED_PAYMENTS_2;
            x = CollectionCaseConstants.NUMBER_OF_MISSED_PAYMENTS_1;
            x = CollectionCaseConstants.LOW_BALANCE_QUEUE;
            x = CollectionCaseConstants.HIGH_BALANCE_QUEUE;
            x = CollectionCaseConstants.IN_PROGRESS_PROMISE;
            x = CollectionCaseConstants.KEPT_PROMISE;
            x = CollectionCaseConstants.BROKEN_PROMISE;
            x = CollectionCaseConstants.CONGA_GENERATE_DOCUMENT_URL;
        Test.stopTest();

        System.assert(x != null);

    }
}